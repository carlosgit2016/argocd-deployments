name: 'Golang services test and build'

on:
  pull_request:
    paths:
      - "services/"
  push:
    paths:
      - "services/"
    branches:
      - "main"

jobs:
  test:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        services: ['event-ledger', 'worker']
    defaults:
      run:
        working-directory: services/${{ matrix.services }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.19.1'
          cache-dependency-path: services/${{ matrix.services }}
      - run: go install
        name: Installing dependencies
      - run: go test ./...
        if: ${{ matrix.services == 'worker' }}
        name: "Testing :approved:"
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        services: ['event-ledger', 'worker']
    steps:
      - uses: actions/checkout@v4

      - name: Get commit short sha
        if: github.ref_name != 'main'
        id: sha
        run: echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: services/${{ matrix.services }}
          push: false
          tags: ${{ matrix.services }}-${{ github.ref_name == 'main' && 'latest' || steps.sha.outputs.short }}
      # TODO: Configure AWS OIDC 
      # TODO: Push image to ecr